# Depth of the onchain merkle tree
tree_depth = 30
# Socket address for the service to listen to for incoming inclusion proof requests
socket_address = "127.0.0.1:8080"

[cache]
# Cache file to store the tree state
cache_file = "tree-cache"
# Flag to purge existing cache on startup
# purge_cache = true

# Ethereum Mainnet configuration
[canonical_tree]
# Address of the WorldIdIdentityManager contract
address = "0xf7134CE138832c1456F2a91D64621eE90c2bddEa"
# Creation block of the WorldIdIdentityManager contract
creation_block = 17636832
# RPC endpoint
provider.rpc_endpoint = ""
# Requests per second throttle
provider.throttle = 150
# Blockscanner window size; the maximum number of blocks to query at a time
window_size = 10000


# OP Mainnet
[[bridged_trees]]
# Address of the BridgedWorldId contract
address = "0xB3E7771a6e2d7DD8C0666042B7a07C39b938eb7d"
# Creation block of the BridgedWorldId contract
creation_block = 109906421
# RPC endpoint
provider.rpc_endpoint = ""
# Requests per second throttle
provider.throttle = 150
# Blockscanner window size; the maximum number of blocks to query at a time
window_size = 10000


# Polygon
[[bridged_trees]]
# Address of the BridgedWorldId contract
address = "0xa6d85F3b3bE6Ff6DC52C3aaBe9A35d0ce252b79F"
# Creation block of the BridgedWorldId contract
creation_block = 47860919
# RPC endpoint
provider.rpc_endpoint = ""
# Requests per second throttle
provider.throttle = 150
# Blockscanner window size; the maximum number of blocks to query at a time
window_size = 10000


# [telemetry]
# service_name = "world-tree"
